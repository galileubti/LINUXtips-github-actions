name: "Nível 2: Testes Automatizados"
on:
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  CHALLENGE_LEVEL: 2
  CHALLENGE_NAME: "testes-automatizados"
  COVERAGE_MIN: 80 # Cobertura mínima exigida em porcentagem

jobs:
  tests-and-coverage:
    name: "Testes e Cobertura"
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}

    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4

      - name: "Setup Node" 
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
        
      - name: "Instalar dependências"
        run: |
          echo "Instalando dependências..."
          npm ci
          echo "Dependências instaladas com sucesso!"   

      - name: "Executar testes"
        run: |
          echo "Executando testes..."
          npm test
          echo "Testes executados com sucesso!"

      - name: "Extrair porcentagem de cobertura" # Esse step será validado pelo desafio, não altere o nome. No final, ele deve gerar o output "coverage" com a porcentagem de cobertura.
        id: coverage
        run: |
          COVERAGE=$(npx nyc report --reporter=text-summary | grep -oP 'Statements\s*:\s*\K[0-9\.]+(?=%)' | head -1)
          echo "Coverage: $COVERAGE%"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: "Validar cobertura mínima"
        if: steps.coverage.outputs.coverage != ''
        run: |
          echo "Validando cobertura mínima de ${{ env.COVERAGE_MIN }}%..."
          COVERAGE=$(echo "${{ steps.coverage.outputs.coverage }}" | awk '{print int($1+0.5)}')
          if [ "$COVERAGE" -lt "${{ env.COVERAGE_MIN }}" ]; then
            echo "Cobertura insuficiente: $COVERAGE%. Mínimo exigido é ${{ env.COVERAGE_MIN }}%."
            exit
            

  generate-certificate: # DAQUI PARA BAIXO, NÃO ALTERAR
      name: "Desafio Nível 2 - Certificado"
      runs-on: ubuntu-latest
      needs: tests-and-coverage
      if: success() && needs.tests-and-coverage.outputs.coverage != ''

      steps:
        - name: "Gerar certificado"
          run: |
            mkdir -p certificates
            cat > certificates/level-2-certificate.md << EOF
            # Certificado de Conclusão - Nível 2

            **Descomplicando Github Actions - GitHub Actions Edition**
            ---

            Este certificado atesta que **${{ github.actor }}** concluiu com sucesso:
            ## Nível 2: Testes Automatizados

            **Competências desenvolvidas:**
            - Automação de testes
            - Análise de cobertura
            - Lógica de validação com coverage mínimo
            - Upload de artefatos

            **Cobertura:** >= ${{ env.COVERAGE_MIN }}%
            **Data de conclusão:** $(date)
            **Repositório:** ${{ github.repository }}
            **Workflow:** ${{ github.run_id }}

            ---
            **Badge conquistado:** Testes Automatizados

            ---
            *Certificado gerado automaticamente pelo GitHub Actions*
            *LINUXtips*
            EOF

        - name: "Upload do certificado"
          uses: actions/upload-artifact@v4
          with:
            name: level-2-certificate
            path: certificates/
            retention-days: 30
